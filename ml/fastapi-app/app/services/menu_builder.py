from __future__ import annotations
import json, re
from typing import Any, Dict, List

from app.clients.yandex_gpt import call_gpt
from app.services.rag_search import RAGSearch

_SECOND_SYSTEM = "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥ –∏ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥."

_JSON_RE = re.compile(r"\{.*\}", re.S)


def _extract_json(text: str) -> Dict[str, Any]:
    m = _JSON_RE.search(text)
    if not m:
        raise ValueError("JSON not –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ LLM")
    return json.loads(m.group(0))


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def build_menu(dishes: List[str], rag: RAGSearch) -> Dict[str, Any]:

    print("–®–∞–≥ 1: –≥–æ—Ç–æ–≤–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç...")

    ctx = []
    for dish in dishes:
        print(f"üîç –ò—â–µ–º —Ä–µ—Ü–µ–ø—Ç –¥–ª—è: {dish}")
        recipe = rag.find(dish)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ä–µ—Ü–µ–ø—Ç –¥–ª–∏–Ω–æ–π {len(recipe) if recipe else 0}")
        ctx.append({"name": dish, "recipe": recipe})

    print("–ö–æ–Ω—Ç–µ–∫—Å—Ç –≥–æ—Ç–æ–≤")

    user_prompt = (
        "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –±–ª—é–¥–∞ —Ä–∞—Å–ø–∏—à–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã "
        "—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞–º–∏, —à–∞–≥–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∫ –ø–æ–∫—É–ø–∫–µ. "
        "–ï—Å–ª–∏ –ø–æ–ª–µ recipe = null ‚Äî –ø—Ä–∏–¥—É–º–∞–π —Å–∞–º–∞, —É—á–∏—Ç—ã–≤–∞—è –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞. "
        "–ï—Å–ª–∏ recipe –∑–∞–ø–æ–ª–Ω–µ–Ω–æ ‚Äî –º–æ–∂–µ—à—å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É—Ç–æ—á–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ.\n\n"
        f"–ë–ª—é–¥–∞:\n{json.dumps(ctx, ensure_ascii=False, indent=2)}\n\n"
        "–ò –≤–µ—Ä–Ω–∏ **—Å—Ç—Ä–æ–≥–æ –æ–¥–∏–Ω** JSON-–æ–±—ä–µ–∫—Ç, –±–µ–∑ markdown, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π, –Ω–∞ —Ç—Ä–∏ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏.\n"
        "–§–æ—Ä–º–∞—Ç:\n"
        "{\n"
        '  "meals": [\n'
        '    {\n'
        '      "type": "lunch" | "dinner" | "breakfast",\n'
        '      "dish": "‚Ä¶",\n'
        '      "ingredients": [\n'
        '        {"name": "‚Ä¶", "amount": <—á–∏—Å–ª–æ>, "unit": "g|ml|pcs"}\n'
        "      ],\n"
        '      "steps": ["–®–∞–≥ 1", "–®–∞–≥ 2"]\n'
        "    }\n"
        "  ]\n"
        "}"
    )

    print("\n")
    print("\n")
    print(user_prompt)
    print("\n")
    print("\n")
    
    print("–í—ã–∑—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å")
    
    raw = call_gpt(
        system_prompt=_SECOND_SYSTEM,
        user_prompt=user_prompt,
        max_tokens=2000,
    )
    
    print("–ú–æ–¥–µ–ª—å –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞")
    
    return _extract_json(raw)
